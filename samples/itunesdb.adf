.setorder LITTLE_ENDIAN
.setencoding UTF-8

# ----- DEFINES --------

.define(ListHeader) {    # MHSD
	string('mhsd')	mhsdIdentifier
	int				headerLength
	int				chunkSize
	int				typeNumber
	.jump &mhsdIdentifier + headerLength
}

.define(TrackListHeader){
	string('mhlt')	mhltIdentifier
	int				headerLength
	int				numOfSongs
	.jump &mhltIdentifier + headerLength
}

.define(TrackListItemHeader){
	string('mhit')	mhitIdentifier
	int				headerLength
	int				totalLength
	int				numOfStrings
	#int			uniqueId
	# more stuff here
	.jump	&mhitIdentifier + headerLength
}

.define(SimpleTrackData){
	.skip 12
	#int			unk
	#int			unk
	#int			position
	int				stringLength
	.skip 8
	#int			unk
	#int			unk
	string(stringLength, UTF-16LE)	StringData
}

.define(PlayListHeader){
	string('mhlp')	mhlpIdentifier
	int				headerLength
	int				numOfPlaylists
	.jump &mhlpIdentifier + headerLength
}

.define(PlayList){
	string('mhyp')	mhypIdentifier
	int				headerLength
	int				chunkSize
	int				mhodCount
	int				mhipCount
	.jump &mhypIdentifier + chunkSize
}
# ------- START -------

.group(Database) {                # MHBD
	string('mhbd')	mhbdIdentifier
	int				headerLength
	int				chunkSize
	.skip 4
	#int			unk
	int				versionNumber
	int				numOfLists
	long			id
	.skip 12
	#int			unk
	#long			unk
	short			language
	long			libraryId
	
	.jump	headerLength
}

.repeat(numOfLists) {
	.include ListHeader
	.if(typeNumber == 1) {  # Track list
		.group(TrackList) {
			.include TrackListHeader
			.repeat(numOfSongs) {
				.group(TrackListItem) {
					.include TrackListItemHeader
					.repeat(numOfStrings){
						string('mhod')	mhodIdentifier
						int				headerLength
						int				totalLength
						int				mhodType
						.if(mhodType <= 15) {
							.include 	SimpleTrackData
						}
						.jump &mhodIdentifier + totalLength
					}
				}
			}
		}
	}

	.if(typeNumber==2){  # Play list
		.include PlayListHeader
		.repeat(numOfPlaylists){
			.include PlayList
		}
	}	
}

END
